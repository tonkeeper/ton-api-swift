//
// TracesAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class TracesAPI {

    /**

     - parameter gaslessEstimateRequestMessagesInner: (body) bag-of-cells serialized to hex 
     - parameter ignoreSignatureCheck: (query)  (optional)
     - returns: Trace
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func emulateMessageToTrace(gaslessEstimateRequestMessagesInner: GaslessEstimateRequestMessagesInner, ignoreSignatureCheck: Bool? = nil) async throws -> Trace {
        return try await emulateMessageToTraceWithRequestBuilder(gaslessEstimateRequestMessagesInner: gaslessEstimateRequestMessagesInner, ignoreSignatureCheck: ignoreSignatureCheck).execute().body
    }

    /**
     - POST /v2/traces/emulate
     - Emulate sending message to retrieve with a detailed execution trace
     - parameter gaslessEstimateRequestMessagesInner: (body) bag-of-cells serialized to hex 
     - parameter ignoreSignatureCheck: (query)  (optional)
     - returns: RequestBuilder<Trace> 
     */
    open class func emulateMessageToTraceWithRequestBuilder(gaslessEstimateRequestMessagesInner: GaslessEstimateRequestMessagesInner, ignoreSignatureCheck: Bool? = nil) -> RequestBuilder<Trace> {
        let localVariablePath = "/v2/traces/emulate"
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: gaslessEstimateRequestMessagesInner)

        var localVariableUrlComponents = URLComponents(string: localVariableURLString)
        localVariableUrlComponents?.queryItems = APIHelper.mapValuesToQueryItems([
            "ignore_signature_check": (wrappedValue: ignoreSignatureCheck?.encodeToJSON(), isExplode: true),
        ])

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Trace>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }

    /**

     - parameter traceId: (path) trace ID or transaction hash in hex (without 0x) or base64url format 
     - returns: Trace
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func getTrace(traceId: String) async throws -> Trace {
        return try await getTraceWithRequestBuilder(traceId: traceId).execute().body
    }

    /**
     - GET /v2/traces/{trace_id}
     - Get the trace by trace ID or hash of any transaction in trace
     - parameter traceId: (path) trace ID or transaction hash in hex (without 0x) or base64url format 
     - returns: RequestBuilder<Trace> 
     */
    open class func getTraceWithRequestBuilder(traceId: String) -> RequestBuilder<Trace> {
        var localVariablePath = "/v2/traces/{trace_id}"
        let traceIdPreEscape = "\(APIHelper.mapValueToPathItem(traceId))"
        let traceIdPostEscape = traceIdPreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        localVariablePath = localVariablePath.replacingOccurrences(of: "{trace_id}", with: traceIdPostEscape, options: .literal, range: nil)
        let localVariableURLString = TonAPIAPI.basePath + localVariablePath
        let localVariableParameters: [String: Any]? = nil

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            :
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<Trace>.Type = TonAPIAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "GET", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
